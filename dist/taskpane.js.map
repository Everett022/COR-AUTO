{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","Office.onReady((info) => {\r\n  if (info.host === Office.HostType.Excel) {\r\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\r\n    document.getElementById(\"app-body\").style.display = \"flex\";\r\n    document.getElementById(\"generate-ordering-report\").onclick = () => tryCatch(generateOrderingReport);\r\n    document.getElementById(\"generate-inventory-report\").onclick = () => tryCatch(generateInventoryReport);\r\n    document.getElementById(\"temp-reset\").onclick = () => tryCatch(resetAll);\r\n    document.getElementById('start-date').addEventListener('input', checkDatesAndClearMessage);\r\n    document.getElementById('end-date').addEventListener('input', checkDatesAndClearMessage);\r\n  }\r\n});\r\n\r\n// Global Variable inits     \r\n    let filter = [];\r\n    let earlyDateMap = new Map(); \r\n    let orderingWorksheet;\r\n    let orderingTable;\r\n    let seenJobs = new Set();\r\n    let allData = [];\r\n    let matchingData = [];\r\n\r\nasync function generateOrderingReport() {\r\n    await Excel.run(async (context) => {\r\n        resetGenerateOrdering();\r\n        await context.sync();\r\n\r\n        orderingWorksheet = context.workbook.worksheets.add(\"Ordering\");\r\n        orderingTable = orderingWorksheet.tables.add(\"A1:G1\", true);\r\n\r\n        orderingTable.name = \"OrderingTable\";\r\n\r\n        orderingTable.getHeaderRowRange().values = [[\"Case #\",\"Demand\",\"Current Inventory\", \"On Order\", \"Required Amount\",\"Buy or Make\", \"Earliest Start Date\"]];\r\n     \r\n        orderingTable.columns.getItemAt(3).getRange().numberFormat = [['\\u20AC#,##0.00']];\r\n        orderingTable.getRange().format.autofitColumns();\r\n        orderingTable.getRange().format.autofitRows();\r\n        \r\n        const startDateValue = document.getElementById('start-date').value;\r\n        const endDateValue = document.getElementById('end-date').value;\r\n        orderingWorksheet.onSelectionChanged.add(displayData);\r\n\r\n        if(!startDateValue || !endDateValue){\r\n            document.getElementById('message-area').textContent = \"Please enter the dates\";\r\n            return;\r\n        }else{\r\n            document.getElementById('message-area').textContent = \" \";\r\n            dateFilter();\r\n            await context.sync();\r\n            importColumnData();\r\n        }\r\n        await context.sync();\r\n    });\r\n}\r\n\r\nasync function generateInventoryReport() {\r\n    await Excel.run(async (context) => {\r\n        const inventoryWorksheet = context.workbook.worksheets.add(\"Inventory At\");\r\n        const inventoryTable = inventoryWorksheet.tables.add(\"A1:F1\", true);\r\n        \r\n        inventoryTable.name = \"InventoryAtTable\";\r\n        inventoryTable.getHeaderRowRange().values = [[\"Material\", \"Demand\", \"MEB\", \"EFW\", \"Release\", \"Planned Start Date\"]];\r\n\r\n        inventoryTable.columns.getItemAt(2).getRange().numberFormat = [['\\u20AC#,##0.00']];\r\n        inventoryTable.getRange().format.autofitColumns();\r\n        inventoryTable.getRange().format.autofitRows();\r\n\r\n        await context.sync();\r\n    });\r\n}\r\n\r\nasync function tryCatch(callback) {\r\n    try {\r\n        await callback();\r\n    } catch (error) {\r\n        alert(error);\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nasync function importColumnData() {\r\n    await Excel.run(async (context) => {\r\n        const inventoryReportWorksheet = context.workbook.worksheets.getItem(\"Inventory\");\r\n        const inventoryUsedRange = inventoryReportWorksheet.getUsedRange().load(\"values\");\r\n\r\n        const dynamicWorksheet = context.workbook.worksheets.getItem(\"Dynamic\");\r\n        const dynamicUsedRange = dynamicWorksheet.getUsedRange().load(\"values\");\r\n        \r\n        const openPOsWorksheet = context.workbook.worksheets.getItem(\"Open PO's\");\r\n        const openPOsUsedRange = openPOsWorksheet.getUsedRange().load(\"values\");\r\n        const orderingWorksheet = context.workbook.worksheets.getItem(\"Ordering\");\r\n\r\n        await context.sync();\r\n\r\n        //Dynamic fluid Placement\r\n        const dynamicHeaders = dynamicUsedRange.values[0];\r\n        \r\n        const dynItemCodeIdx = dynamicHeaders.indexOf(\"Corrugate\");\r\n        const dynItemQtyIdx = dynamicHeaders.indexOf(\"Number of Corrugate\");\r\n        const dynWorkIdx = dynamicHeaders.indexOf(\"Work Center\");\r\n        \r\n        const dynItemCodeColumn = `${colIdxToLetter(dynItemCodeIdx)}:${colIdxToLetter(dynItemCodeIdx)}`;\r\n        const dynItemQtyColumn = `${colIdxToLetter(dynItemQtyIdx)}:${colIdxToLetter(dynItemQtyIdx)}`;\r\n        const dynWorkColumn = `${colIdxToLetter(dynWorkIdx)}:${colIdxToLetter(dynWorkIdx)}`;\r\n\r\n        //Open PO's fluid Placement\r\n        const openPOsHeaders = openPOsUsedRange.values[0];\r\n        const openPOItemCodeIdx = openPOsHeaders.indexOf(\"Item Code\");\r\n        const openPOItemQtyIdx = openPOsHeaders.indexOf(\"Outstanding Qty\");\r\n        \r\n        const openPOItemCodeColumn = `${colIdxToLetter(openPOItemCodeIdx)}:${colIdxToLetter(openPOItemCodeIdx)}`;\r\n        const openPOItemQtyColumn = `${colIdxToLetter(openPOItemQtyIdx)}:${colIdxToLetter(openPOItemQtyIdx)}`;\r\n       \r\n        //Inventory Report Fluid Placement\r\n        const inventoryHeaders = inventoryUsedRange.values[0];\r\n\r\n        const invItemCodeIdx = inventoryHeaders.indexOf(\"Item Code\");\r\n        const invItemQtyIdx = inventoryHeaders.indexOf(\"Inventory Qty\");\r\n        \r\n        const invRepItemCodeColumn = `${colIdxToLetter(invItemCodeIdx)}:${colIdxToLetter(invItemCodeIdx)}`;\r\n        const invRepItemQtyColumn = `${colIdxToLetter(invItemQtyIdx)}:${colIdxToLetter(invItemQtyIdx)}`;\r\n\r\n        //Quanity and Item Code from Dynamic, Inventory Report, and Open PO's sheets\r\n        const dynamic = context.workbook.worksheets.getItem(\"Dynamic\");\r\n        const dynamicQR = dynamic.getRange(dynItemQtyColumn).getUsedRange().load(\"values\");\r\n        const dynamicICR = dynamic.getRange(dynItemCodeColumn).getUsedRange().load(\"values\");\r\n        const dynamicWork = dynamic.getRange(dynWorkColumn).getUsedRange().load(\"values\");\r\n        await context.sync();\r\n\r\n        const inventoryICR = inventoryReportWorksheet.getRange(invRepItemCodeColumn).getUsedRange().load(\"values\"); \r\n        const inventoryQR = inventoryReportWorksheet.getRange(invRepItemQtyColumn).getUsedRange().load(\"values\"); \r\n\r\n        const openPOs = context.workbook.worksheets.getItem(\"Open PO's\");\r\n        const openPOsICR = openPOs.getRange(openPOItemCodeColumn).getUsedRange().load(\"values\"); \r\n        const openPOsQR = openPOs.getRange(openPOItemQtyColumn).getUsedRange().load(\"values\"); \r\n        await context.sync();\r\n\r\n        //Date Filtering\r\n        const filteredICR = filter.map(item => [item.itemCode]);\r\n        const filteredQR = filter.map(item => [item.qty]);\r\n        \r\n        //Sum Map Building\r\n        const fullDynamicMap = buildSumMap(dynamicICR.values, dynamicQR.values);\r\n        const dynamicMap = buildSumMap(filteredICR, filteredQR);\r\n        const inventoryMap = buildSumMap(inventoryICR.values, inventoryQR.values);\r\n        const openPOsMap = buildSumMap(openPOsICR.values, openPOsQR.values);\r\n\r\n        const allItemCodes = new Set([\r\n            ...dynamicMap.keys(),\r\n            ...inventoryMap.keys(),\r\n            ...openPOsMap.keys()\r\n        ]);\r\n\r\n        const result = [[\"Case #\", \"Required Amount\"]]; \r\n        for (const code of allItemCodes) {\r\n            const dynamicQty = dynamicMap.get(code) || 0;\r\n            const inventoryQty = inventoryMap.get(code) || 0;\r\n            const openPOsQty = openPOsMap.get(code) || 0;\r\n            const toOrder = dynamicQty - inventoryQty - openPOsQty;\r\n          if (toOrder > 0){\r\n                result.push([code, toOrder]);\r\n          } \r\n        }\r\n\r\n        const caseNumbers = result.map(row => [row[0]]);\r\n        orderingWorksheet.getRange(`A1:A${caseNumbers.length}`).values = caseNumbers;\r\n\r\n        const requiredAmounts = result.map(row => [row[1]]);\r\n        orderingWorksheet.getRange(`E1:E${requiredAmounts.length}`).values = requiredAmounts;\r\n        await context.sync();\r\n\r\n        // Remove From Order\r\n        const sell = [[\"Case #\",\"Remove From Order\"]];\r\n        for (const code of allItemCodes){\r\n            const dynamicQty = Number(fullDynamicMap.get(code)) || 0;\r\n            const openPOsQty = Number(openPOsMap.get(code)) || 0;\r\n            const overBuy = openPOsQty - dynamicQty;\r\n            if (!isNaN(dynamicQty) && !isNaN(openPOsQty)) {\r\n                if (String(code).includes(\"COR\") && openPOsQty > dynamicQty) {\r\n                    sell.push([code, overBuy]);\r\n                }\r\n            }\r\n        }\r\n        console.log(\"Sell these\", sell);\r\n        \r\n        //Importing the Planned Start Date\r\n        const orderingUsedRange = orderingWorksheet.getUsedRange().load(\"values\");\r\n        await context.sync();\r\n\r\n        const orderingValues = orderingUsedRange.values;\r\n        \r\n        const startArray = [[\"Earliest Start Date\"]];\r\n        for (let i = 1; i < orderingValues.length; i++) {\r\n            const itemCode = String(orderingValues[i][0]).trim();\r\n            const start = String(earlyDateMap.get(itemCode)) || \"No Start Date Established\";\r\n            const dateOnly = start.split(' ').slice(0, 4).join(' ');\r\n            startArray.push([dateOnly]);\r\n        }\r\n        orderingWorksheet.getRange(`G1:G${startArray.length}`).values = startArray;\r\n\r\n        //Importing Demand, Current Inventory, and On Order\r\n        const caseOrder = result.map(row => row[0]);\r\n\r\n        const demand = [[\"Demand\"]]; \r\n        for (const code of caseOrder) {\r\n            const demandQty = dynamicMap.get(code) || 0;\r\n          if (demandQty > 0){\r\n                demand.push([demandQty]);\r\n          }      \r\n        }\r\n        \r\n        const demandOutput = demand.map(row => [row[0]]);\r\n        orderingWorksheet.getRange(`B1:B${demandOutput.length}`).values = demandOutput;\r\n\r\n        const currentInventory = [[\"Current Inventory\"]]; \r\n        for (const code of caseOrder.slice(1)) {\r\n            const currentInvQty = inventoryMap.get(code) || 0;\r\n            currentInventory.push([currentInvQty]);\r\n        }\r\n        \r\n        const currentInventoryOutput = currentInventory.map(row => [row[0]]);\r\n        orderingWorksheet.getRange(`C1:C${currentInventoryOutput.length}`).values = currentInventoryOutput;\r\n\r\n        const onOrder = [[\"On Order\"]]; \r\n        for (const code of caseOrder.slice(1)) {\r\n            const onOrderQty = openPOsMap.get(code) || 0;\r\n            onOrder.push([onOrderQty]);           \r\n        }\r\n        \r\n        const onOrderOutput = onOrder.map(row => [row[0]]);\r\n        orderingWorksheet.getRange(`D1:D${onOrderOutput.length}`).values = onOrderOutput;\r\n\r\n        //Buy or Make Logic\r\n        const orderOrMakeMap = new Map();\r\n        for (let i = 1; i < dynamicICR.values.length; i++) {\r\n            const code = String(dynamicICR.values[i][0]).trim();\r\n            const work = dynamicWork.values[i] ? String(dynamicWork.values[i][0]).trim() : \"\";\r\n            if (code && work) {\r\n                if(!orderOrMakeMap.has(code)) {\r\n                    orderOrMakeMap.set(code, new Set());\r\n                }\r\n                orderOrMakeMap.get(code).add(work);\r\n            }\r\n        }\r\n        await context.sync();\r\n\r\n        const orderOrMake = [[\"Buy or Make\"]]; \r\n        for (const code of caseOrder.slice(1)) {\r\n            const workCentersSet = orderOrMakeMap.get(code);\r\n            const workCenters = workCentersSet ? Array.from(workCentersSet).join(\", \") : \"\";\r\n            orderOrMake.push([workCenters]);\r\n        }\r\n        const orderOrMakeOutput = orderOrMake.map(row => [row[0]]);\r\n        const orderOrMakeCategory = [[\"Buy or Make\"]];\r\n        \r\n        for (let i = 1; i < orderOrMakeOutput.length; i++) {\r\n            const workCenters = orderOrMakeOutput[i][0];\r\n            if(\r\n                workCenters.includes(\"40FGAL3A\") || \r\n                workCenters.includes(\"40FGAL3B\") ||\r\n                workCenters.includes(\"40FGAL3C\") || \r\n                workCenters.includes(\"40FGSI2A\") ||\r\n                workCenters.includes(\"40AIFG2B\")\r\n            ) {\r\n                orderOrMakeCategory.push([\"Must Buy\"]); \r\n            } else if (Number(requiredAmounts[i][0]) >= 300){\r\n                orderOrMakeCategory.push([\"Can Buy\"]);  \r\n            }\r\n            else{\r\n                orderOrMakeCategory.push([\"Can Make\"]);    \r\n            }    \r\n            await context.sync();    \r\n        }\r\n        orderingWorksheet.getRange(`F1:F${orderOrMakeCategory.length}`).values = orderOrMakeCategory;\r\n\r\n        // Table Formatting\r\n        orderingWorksheet.getRange(\"A:G\").format.autofitColumns();\r\n        orderingWorksheet.getRange(\"A:H\").format.horizontalAlignment = \"Center\";\r\n        orderingWorksheet.getRange(\"A:H\").format.verticalAlignment = \"Center\";\r\n        orderingWorksheet.getRange(\"D:D\").numberFormat = [['General']];\r\n\r\n        orderingWorksheet.getRange(\"A:A\").format.columnWidth = 150;\r\n        orderingWorksheet.getRange(\"B:B\").format.columnWidth = 90;\r\n        orderingWorksheet.getRange(\"C:C\").format.columnWidth = 120;\r\n        orderingWorksheet.getRange(\"D:D\").format.columnWidth = 90;\r\n        orderingWorksheet.getRange(\"E:E\").format.columnWidth = 130;\r\n        orderingWorksheet.getRange(\"F:F\").format.columnWidth = 100;\r\n        orderingWorksheet.getRange(\"B:B\").format.columnWidth = 130;\r\n        orderingWorksheet.getUsedRange().format.rowHeight = 30;\r\n\r\n        orderingWorksheet.freezePanes.freezeRows(1); \r\n        \r\n        orderingWorksheet.getRange(\"E1:E1\").format.fill.color = \"#BE5014\";\r\n        orderingWorksheet.getRange(\"E1:E1\").format.font.color = \"yellow\";     \r\n\r\n        //All border lines\r\n        const usedRange = orderingWorksheet.getUsedRange();   \r\n        const borders = usedRange.format.borders;\r\n        [\r\n            \"EdgeTop\",\r\n            \"EdgeBottom\",\r\n            \"EdgeLeft\",\r\n            \"EdgeRight\",\r\n            \"InsideVertical\",\r\n            \"InsideHorizontal\"\r\n        ].forEach(edge => {\r\n            borders.getItem(edge).style = \"Continuous\";\r\n            borders.getItem(edge).weight = \"Thin\";\r\n            borders.getItem(edge).color = \"#000000\"; \r\n        });\r\n        //Bold Outline Lines\r\n        const lastRow = demandOutput.length;\r\n        const highlight = orderingWorksheet.getRange(`E1:E${lastRow}`).format.borders;\r\n         [\r\n            \"EdgeTop\",\r\n            \"EdgeBottom\",\r\n            \"EdgeLeft\",\r\n            \"EdgeRight\",\r\n        ].forEach(side => {\r\n            highlight.getItem(side).style = \"Continuous\";\r\n            highlight.getItem(side).weight = \"Thick\";\r\n            highlight.getItem(side).color = \"#BE5014\"; \r\n        });\r\n\r\n\r\n        await context.sync();\r\n    });\r\n}\r\n        \r\nasync function resetAll() {\r\n        await Excel.run(async (context) => {\r\n            const sheets = context.workbook.worksheets;\r\n            sheets.getItemOrNullObject(\"Ordering\").delete();\r\n            sheets.getItemOrNullObject(\"Inventory At\").delete();\r\n            sheets.getItemOrNullObject(\"Test\").delete();\r\n            document.getElementById('start-date').value = \"\";\r\n            document.getElementById('end-date').value = \"\";\r\n        await context.sync();\r\n    });\r\n}\r\n\r\nasync function resetGenerateOrdering() {\r\n        await Excel.run(async (context) => {\r\n            const sheets = context.workbook.worksheets;\r\n            sheets.getItemOrNullObject(\"Ordering\").delete();\r\n            filter = [];\r\n            seenJobs.clear();\r\n            earlyDateMap.clear();\r\n        await context.sync();\r\n    });\r\n}\r\n\r\nfunction colIdxToLetter(idx) {\r\n            let letter = \"\";\r\n            while (idx >= 0) {\r\n                letter = String.fromCharCode((idx % 26) + 65) + letter;\r\n                idx = Math.floor(idx / 26) - 1;\r\n            }\r\n            return letter;\r\n}\r\n\r\nfunction buildSumMap(itemCodes, qtys) {\r\n            const map = new Map();\r\n            for (let i = 1; i < itemCodes.length; i++) { \r\n                const code = itemCodes[i][0];\r\n                const qty = Number(qtys[i][0]);\r\n                if (code && !isNaN(qty)) {\r\n                    map.set(code, (map.get(code) || 0) + qty);\r\n                }\r\n            }\r\n            return map;\r\n}\r\n\r\nasync function dateFilter() {\r\n    await Excel.run(async (context) => {\r\n        const startDateInput = document.getElementById('start-date').value;\r\n        const endDateInput = document.getElementById('end-date').value;\r\n\r\n        const startDate = inputDateParse(startDateInput);\r\n        const endDate = inputDateParse(endDateInput);\r\n\r\n        const dynamicWorksheet = context.workbook.worksheets.getItem(\"Dynamic\");\r\n        const dynamicUsedRange = dynamicWorksheet.getUsedRange().load(\"values\");\r\n        await context.sync();\r\n        const dynamicHeaders = dynamicUsedRange.values[0];\r\n\r\n        const dynItemCodeIdx = dynamicHeaders.indexOf(\"Corrugate\");\r\n        const dynStartIdx = dynamicHeaders.indexOf(\"Planned Start\");\r\n        const dynItemQtyIdx = dynamicHeaders.indexOf(\"Number of Corrugate\");\r\n        const dynJobIdx = dynamicHeaders.indexOf(\"Order Number\");\r\n\r\n        const dynStartColumn = `${colIdxToLetter(dynStartIdx)}:${colIdxToLetter(dynStartIdx)}`;\r\n        const dynItemQtyColumn = `${colIdxToLetter(dynItemQtyIdx)}:${colIdxToLetter(dynItemQtyIdx)}`;\r\n        const dynItemCodeColumn = `${colIdxToLetter(dynItemCodeIdx)}:${colIdxToLetter(dynItemCodeIdx)}`;\r\n        const dynJobColumn =`${colIdxToLetter(dynJobIdx)}:${colIdxToLetter(dynJobIdx)}`;\r\n\r\n        const dynamic = context.workbook.worksheets.getItem(\"Dynamic\");\r\n        const dynamicICR = dynamic.getRange(dynItemCodeColumn).getUsedRange().load(\"values\");\r\n        const dynamicQR = dynamic.getRange(dynItemQtyColumn).getUsedRange().load(\"values\"); \r\n        const plannedStart = dynamicWorksheet.getRange(dynStartColumn).getUsedRange().load(\"values\");\r\n        const jobNumber = dynamicWorksheet.getRange(dynJobColumn).getUsedRange().load(\"values\");\r\n\r\n        await context.sync();\r\n   \r\n        for (let i = 1; i < dynamicICR.values.length; i++){\r\n            const itemCode = String(dynamicICR.values[i][0]).trim();\r\n            const dateStr = plannedStart.values[i] ? String(plannedStart.values[i][0]).trim() : \"\";\r\n            const date = ExcelDateToJSDate(dateStr);\r\n            const job = String(jobNumber.values[i][0]).trim();\r\n            date.setHours(0,0,0,0);\r\n            const qty = Number(dynamicQR.values[i][0]);\r\n            if(itemCode && date >= startDate && date <= endDate && !seenJobs.has(job)){\r\n                filter.push({itemCode,qty,date});\r\n                seenJobs.add(job);\r\n                if (earlyDateMap.has(itemCode) && date <= earlyDateMap.get(itemCode)){\r\n                    earlyDateMap.set(itemCode, date);\r\n                }else if (!earlyDateMap.has(itemCode)){\r\n                    earlyDateMap.set(itemCode, date);\r\n                }\r\n            }\r\n        }\r\n        filter.sort((a,b) => a.date - b.date);\r\n        await context.sync();\r\n\r\n        for (let i = 1; i < dynamicICR.values.length; i++){\r\n            const itemCode = String(dynamicICR.values[i][0]).trim();\r\n            const dateStr = plannedStart.values[i] ? String(plannedStart.values[i][0]).trim() : \"\";\r\n            const date = ExcelDateToJSDate(dateStr);\r\n            date.setHours(0,0,0,0);\r\n            const job = String(jobNumber.values[i][0]).trim();\r\n            const qty = Number(dynamicQR.values[i][0]);\r\n            if (itemCode){\r\n                allData.push({itemCode, qty, job, date});\r\n            }\r\n        }\r\n    });    \r\n}\r\n\r\nfunction inputDateParse(str) {\r\n    const [year, month, day] = str.split('-').map(Number);\r\n    return new Date(year, month - 1, day);\r\n}\r\n\r\nfunction ExcelDateToJSDate(excelDate) {\r\n    const utcDate = new Date((excelDate - 25569) * 86400 * 1000);\r\n    return new Date(utcDate.getTime() + (utcDate.getTimezoneOffset() * 60000));\r\n}\r\n\r\nfunction checkDatesAndClearMessage() {\r\n    const startDateValue = document.getElementById('start-date').value;\r\n    const endDateValue = document.getElementById('end-date').value;\r\n    if (startDateValue && endDateValue) {\r\n        document.getElementById('message-area').textContent = \"\";\r\n    }\r\n}\r\n\r\nasync function displayData (event){\r\n    await Excel.run(async (context) => {\r\n        const sheet = context.workbook.worksheets.getItem(\"Ordering\");\r\n        const range = sheet.getRange(event.address);\r\n        range.load([\"columnIndex\", \"values\", \"address\"]);\r\n        await context.sync(); \r\n        console.log(\"Index Number\", range.columnIndex);\r\n\r\n        if (range.columnIndex == 0){\r\n            matchingData.length = 0; \r\n            const match = range.values[0];\r\n\r\n            const allDataICR = allData.map(item => [item.itemCode]);\r\n            const allDatajob = allData.map(item => [item.job]);\r\n            const allDataQR = allData.map(item => [item.qty]);\r\n            const allDatadate = allData.map(item => [item.date]);\r\n\r\n            for (let i = 0; i < allDataICR.length; i++){\r\n                const code = allDataICR[i][0];\r\n                const job = allDatajob[i][0];\r\n                const qty = allDataQR[i][0];\r\n                const date = allDatadate[i][0];\r\n\r\n                if (match == code){\r\n                    matchingData.push({code, job, qty, date});\r\n                }\r\n            }\r\n            handleCellChange([...matchingData]);\r\n            outputAllData([...matchingData]);\r\n        }\r\n        else{\r\n            console.log(\"Not in range\");\r\n        }\r\n        \r\n  });\r\n}\r\n\r\nfunction handleCellChange(matchingData) {\r\n    console.log(\"Matching data: \", matchingData);\r\n    console.log(\"length\", matchingData.length);\r\n    Office.context.ui.displayDialogAsync(\r\n        'https://localhost:3000/display.html',\r\n        {height: 45, width: 55},\r\n    );\r\n\r\n}\r\n\r\nfunction outputAllData(matchingData) {\r\n    const output = document.getElementById('data-output');\r\n    console.log(\"output\", matchingData.length);\r\n}\r\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/SW.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>COR-AUTO Task Pane</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"Contoso\\\" title=\\\"Contoso\\\"/> <h1 class=\\\"header_font\\\">COR-AUTO</h1> <h5 class=\\\"subheader_font\\\">Corrugated Supply Made Easy</h5> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <div class=\\\"report-row\\\"> <button class=\\\"button-80\\\" id=\\\"generate-ordering-report\\\">Ordering Report</button><br/><br/> <button class=\\\"button-80\\\" id=\\\"generate-inventory-report\\\">Inventory Report</button><br/><br/> </div> <div id=\\\"message-area\\\" class=\\\"msg-format\\\"></div> <div> <button class=\\\"button-80\\\" id=\\\"temp-reset\\\">Reset</button><br/><br/> </div> <form action=\\\"/action_page.php\\\"> <div class=\\\"date-row\\\"> <div class=\\\"date-col\\\"> <label class=\\\"date-font\\\" for=\\\"start-date\\\">Start Date: </label> <input class=\\\"date-format\\\" type=\\\"date\\\" id=\\\"start-date\\\" name=\\\"start-date\\\"> </div> <div class=\\\"date-col\\\"> <label class=\\\"date-font\\\" for=\\\"start-date\\\">Through Date: </label> <input class=\\\"date-format\\\" type=\\\"date\\\" id=\\\"end-date\\\" name=\\\"end-date\\\"> </div> <label id=\\\"user-name\\\"></label><br/><br/> </div></form> </main> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_2___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","enumerable","configurable","writable","_invoke","_unsupportedIterableToArray","_arrayLikeToArray","toString","slice","constructor","name","Array","from","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","Office","onReady","info","host","HostType","Excel","getElementById","style","display","onclick","tryCatch","generateOrderingReport","generateInventoryReport","resetAll","addEventListener","checkDatesAndClearMessage","orderingWorksheet","orderingTable","filter","earlyDateMap","Map","seenJobs","Set","allData","matchingData","_generateOrderingReport","_callee2","_context2","run","_ref","_callee","context","startDateValue","endDateValue","_context","resetGenerateOrdering","sync","workbook","worksheets","add","tables","getHeaderRowRange","values","columns","getItemAt","getRange","numberFormat","format","autofitColumns","autofitRows","onSelectionChanged","displayData","textContent","dateFilter","importColumnData","_x3","_generateInventoryReport","_callee4","_context4","_ref2","_callee3","inventoryWorksheet","inventoryTable","_context3","_x4","_x","_tryCatch","_callee5","callback","_t","_context5","alert","console","error","_importColumnData","_callee7","_context7","_ref3","_callee6","inventoryReportWorksheet","inventoryUsedRange","dynamicWorksheet","dynamicUsedRange","openPOsWorksheet","openPOsUsedRange","dynamicHeaders","dynItemCodeIdx","dynItemQtyIdx","dynWorkIdx","dynItemCodeColumn","dynItemQtyColumn","dynWorkColumn","openPOsHeaders","openPOItemCodeIdx","openPOItemQtyIdx","openPOItemCodeColumn","openPOItemQtyColumn","inventoryHeaders","invItemCodeIdx","invItemQtyIdx","invRepItemCodeColumn","invRepItemQtyColumn","dynamic","dynamicQR","dynamicICR","dynamicWork","inventoryICR","inventoryQR","openPOs","openPOsICR","openPOsQR","filteredICR","filteredQR","fullDynamicMap","dynamicMap","inventoryMap","openPOsMap","allItemCodes","result","_iterator","_step","_code","dynamicQty","inventoryQty","openPOsQty","toOrder","caseNumbers","requiredAmounts","sell","_iterator2","_step2","_code2","_dynamicQty","_openPOsQty","overBuy","orderingUsedRange","orderingValues","startArray","itemCode","start","dateOnly","caseOrder","demand","_iterator3","_step3","_code3","demandQty","demandOutput","currentInventory","_iterator4","_step4","_code4","currentInvQty","currentInventoryOutput","onOrder","_iterator5","_step5","_code5","onOrderQty","onOrderOutput","orderOrMakeMap","_i","code","work","orderOrMake","_iterator6","_step6","_code6","workCentersSet","_workCenters","orderOrMakeOutput","orderOrMakeCategory","_i2","workCenters","usedRange","borders","lastRow","highlight","_context6","getItem","getUsedRange","load","indexOf","concat","colIdxToLetter","map","item","qty","buildSumMap","_toConsumableArray","keys","_createForOfIteratorHelper","s","get","push","err","row","Number","isNaN","String","includes","log","trim","split","join","has","set","horizontalAlignment","verticalAlignment","columnWidth","rowHeight","freezePanes","freezeRows","fill","color","font","forEach","edge","weight","side","_x5","_resetAll","_callee9","_context9","_ref4","_callee8","sheets","_context8","getItemOrNullObject","delete","_x6","_resetGenerateOrdering","_callee1","_context1","_ref5","_callee0","_context0","clear","_x7","idx","letter","fromCharCode","Math","floor","itemCodes","qtys","_dateFilter","_callee11","_context11","_ref6","_callee10","startDateInput","endDateInput","startDate","endDate","dynStartIdx","dynJobIdx","dynStartColumn","dynJobColumn","plannedStart","jobNumber","dateStr","date","job","_i3","_itemCode","_dateStr","_date","_job","_qty","_context10","inputDateParse","ExcelDateToJSDate","setHours","sort","_x8","str","_str$split$map2","isArray","_arrayWithHoles","next","_iterableToArrayLimit","_nonIterableRest","year","month","day","Date","excelDate","utcDate","getTime","getTimezoneOffset","_x2","_displayData","_callee13","event","_context13","_ref7","_callee12","sheet","range","match","allDataICR","allDatajob","allDataQR","allDatadate","_context12","address","columnIndex","handleCellChange","outputAllData","_x9","ui","displayDialogAsync","height","width","URL"],"sourceRoot":""}